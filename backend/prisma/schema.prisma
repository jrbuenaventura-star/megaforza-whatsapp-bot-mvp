generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id             String   @id @default(uuid())
  name           String
  doc_type       DocType              // ← ENUM (no String)
  doc_number     String
  billing_email  String
  whatsapp_phone String   @unique
  discount_pct   Decimal  @db.Decimal(5, 4) @default(0) // 0.0500 = 5%
  created_at     DateTime @default(now())
  discounts   CustomerProductDiscount[]
  orders         Order[]
}

model Product {
  id            String   @id @default(uuid())
  sku           String   @unique
  name          String
  pelletized    Boolean  @default(false)
  price_per_bag Decimal  @default(0)
  active        Boolean  @default(true)

  items         OrderItem[]
  discounts     CustomerProductDiscount[]
}

model CustomerProductDiscount {
  id           String   @id @default(uuid())
  customer_id  String
  product_id   String
  discount_pct Decimal  @db.Decimal(5,4) @default(0)

  customer     Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  product      Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@unique([customer_id, product_id])  // 1 descuento por cliente y producto
  @@index([product_id])
}
enum DocType {
  CEDULA
  NIT
}
enum OrderStatus {
  PENDING
  SCHEDULED
  IN_PRODUCTION
  READY
  DELIVERED
  CANCELLED
}

model Order {
  id            String      @id @default(uuid())
  customer_id   String
  customer      Customer    @relation(fields: [customer_id], references: [id])

  status        OrderStatus @default(PENDING)
  total_bags    Int
  scheduled_at  DateTime?
  delivered_at  DateTime?   // ← con esto podremos sacarlo del backlog
  created_at    DateTime    @default(now())

  items         OrderItem[]
}

model OrderItem {
  id        String @id @default(uuid())
  order_id  String
  order     Order  @relation(fields: [order_id], references: [id])
  sku       String
  name      String
  qty       Int
  unit_net  Int
  subtotal  Int
  product_id  String?
  product     Product?   @relation(fields: [product_id], references: [id])
}

model CapacityConfig {
  id                     Int      @id @default(1)
  pellet_bph             Int
  non_pellet_bph         Int
  workday_start          String   @default("08:00")
  workday_end            String   @default("17:00")
  workdays               String   @default("Mon,Tue,Wed,Thu,Fri,Sat")
  timezone               String   @default("America/Bogota")
  dispatch_buffer_min    Int      @default(60)
}
model TempCart {
  whatsapp_phone String  @id
  items_json     String
  total_bags     Int
  total_net      Int
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}
model Onboarding {
  whatsapp_phone   String   @id
  state            String   @default("ASK_NAME")
  draft_name       String?
  draft_doc_type   String?  // "Cédula" | "NIT"
  draft_doc_number String?
  draft_email      String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}
